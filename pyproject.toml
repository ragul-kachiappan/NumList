[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "numlist"
version = "0.1.0"
description = "A CLI tool for managing lists of unique positive integers with SQLite persistence and multi-format export capabilities"
readme = "README.md"
authors = [
    { name = "ragul-kachiappan", email = "rahul.kachiappan@gmail.com" }
]
requires-python = ">=3.12"
license = "MIT"

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
]
dependencies = [
    "openpyxl>=3.1.5",
    "pandas>=2.2.3",
    "prompt-toolkit>=3.0.51",
    "pyarrow>=20.0.0",
    "typer>=0.16.0",
]

[dependency-groups]
dev = [
    "ruff>=0.3.4",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
]

[project.scripts]
numlist = "numlist.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["src/numlist"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/pyproject.toml",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "B008",  # Ignore typer argument/option call warnings
    "C901",  # Ignore function complexity
    "PLR0912",  # Ignore too many branches
    "PLR2004",  # Ignore magic number in comparison
]

[tool.ruff.lint.isort]
known-first-party = ["numlist"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
